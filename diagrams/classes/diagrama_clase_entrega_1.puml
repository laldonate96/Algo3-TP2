@startuml diagrama de clases
skinparam classAttributeIconSize 0
title Diagrama de clases

class Jugador{
    - nombre: String
    - puntaje: int
    ---
    + Jugador(nombre:String )
    + sumarPuntaje(puntaje:int )
    + obtenerPuntos():int
}

Class Respuesta {
    - contenido: List<String>
    - jugador: Jugador
    ---
    + Respuesta(contenido:List<String>,jugador:Jugador )
    + calcularCantidadRespuestas(respuestasCorrectas:List<String> ):Pair<Integer,Integer>
    + sumarPuntaje(puntaje:int )
}

 abstract class DistribuidoraDePuntaje {
     #totalCorrectas:int;
     #puntaje:int;
     + establecerTotalCorrectas(totalCorrectas:int )
     + asignarPuntaje(respuesta:Respuesta , respuestasIncorrectas:int , respuestasCorrectas:int )
}

class Clasica extends DistribuidoraDePuntaje{
     + asignarPuntaje([super])
}

class ConPenalidad extends DistribuidoraDePuntaje{
     + asignarPuntaje([super])
}

abstract class Pregunta {
    # enunciado: String
    # respuestasCorrectas: List<String>
    ---
    + Pregunta(enunciado: String, respuestasCorrectas:List<String> ,distribuidoraDePuntaje:DistribuidoraDePuntaje )
    + asignarPuntajes(respuestas:List<Respuesta>)
    + asignarPuntaje(Respuesta respuesta)
}

class VerdaderoFalso extends Pregunta {
    +VerdaderoOFalso([super])
}

class MultipleChoice extends Pregunta {
    #opciones: List<String>
    +MultipleChoice([super],opciones: List<String> )
    }


Jugador "1" <- Respuesta
Pregunta -> "1" DistribuidoraDePuntaje
Respuesta <.. Pregunta
DistribuidoraDePuntaje ..> Respuesta

@enduml
